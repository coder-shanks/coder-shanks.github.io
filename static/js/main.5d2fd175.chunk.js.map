{"version":3,"sources":["assets/straw_hat.png","components/nav-item/nav-item.component.jsx","components/header/header.component.jsx","assets/shubham_profile.jpg","components/profile-card/profile-card.component.jsx","components/skill-tag/skill-tag.component.jsx","components/skills/skills.component.jsx","components/social-link/social-link.component.jsx","components/socials/socials.component.jsx","pages/homepage/homepage.component.jsx","pages/blogs/blogs.component.jsx","components/project-info/project-info.component.jsx","components/project-meta/project-meta.component.jsx","components/project-container/project-container.component.jsx","pages/projects/projects.component.jsx","App.js","theme.js","index.js"],"names":["withRouter","itemName","routeUrl","location","to","marginLeft","base","md","variant","pathname","as","href","target","rel","rightIcon","navItems","page","Header","useColorMode","colorMode","toggleColorMode","avatarBgColor","useColorModeValue","justifyContent","flexWrap","height","marginBottom","align","src","strawHatPic","bg","name","size","map","navItem","onClick","FaMoon","FaSun","ProfileCard","useState","count","setCount","typedTextBgColor","typedTextColor","useEffect","templateColumns","lg","mt","p","gridColumnGap","textAlign","alignSelf","profilePic","borderRadius","alt","paddingTop","fontSize","fontWeight","cursor","show","hideWhenDone","onTypingDone","style","color","backgroundColor","padding","Backspace","delay","SkillTag","tag","colorScheme","_hover","transform","transition","tags","Skills","sm","gap","SociaLink","socialUrl","svgIcon","w","h","socialsInfo","FaGithubSquare","FaLinkedin","FaTwitterSquare","FaMedium","Socials","maxW","justify","socialInfo","HomePage","BlogsPage","state","blogs","axios","get","then","result","status","data","setState","error","this","length","id","rendered","date","title","link","_embedded","m","position","React","Component","ProjectInfo","description","paddingBottom","ProjectMeta","projectMeta","language","stargazers_count","forks_count","html_url","homepage","marginRight","GoStar","GoRepoForked","justifySelf","GoMarkGithub","GoLink","ProjectContainer","project","otherProps","bgGradient","ProjectsPage","projects","headers","Accept","repositoryResult","App","pt","exact","path","component","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d2fd175.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/straw_hat.4cb618e3.png\";","import React from 'react';\nimport { Button } from '@chakra-ui/button';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FaExternalLinkAlt } from 'react-icons/fa';\n\nconst NavItem = ({ itemName, routeUrl, location }) => {\n  return itemName !== 'Resume' ? (\n    <Link to={routeUrl}>\n      <Button\n        marginLeft={{ base: '6px', md: '12px' }}\n        variant={location.pathname === routeUrl ? 'outline' : 'solid'}\n      >\n        {itemName}\n      </Button>\n    </Link>\n  ) : (\n    <Button\n      as=\"a\"\n      marginLeft={{ base: '6px', md: '12px' }}\n      href={routeUrl}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      rightIcon={<FaExternalLinkAlt />}\n    >\n      {itemName}\n    </Button>\n  );\n};\n\nexport default withRouter(NavItem);\n","import React from 'react';\nimport {\n  Avatar,\n  Button,\n  Flex,\n  Heading,\n  Icon,\n  useColorMode,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { Link } from 'react-router-dom';\nimport { FaSun, FaMoon } from 'react-icons/fa';\n\nimport strawHatPic from '../../assets/straw_hat.png';\nimport NavItem from '../nav-item/nav-item.component';\n\nconst navItems = [\n  { page: 'Blogs', routeUrl: '/blogs' },\n  { page: 'Projects', routeUrl: '/projects' },\n  {\n    page: 'Resume',\n    routeUrl:\n      'https://drive.google.com/file/d/1oCWBdA7HiicxavpGHsE5IXH1oX3Sm3vP/view?usp=sharing',\n  },\n];\n\nconst Header = () => {\n  const { colorMode, toggleColorMode } = useColorMode();\n  const avatarBgColor = useColorModeValue('gray.100', 'whiteAlpha');\n  return (\n    <Flex\n      justifyContent={{ base: 'center', md: 'space-between' }}\n      flexWrap=\"wrap\"\n    >\n      <Flex>\n        <Button height=\"52px\" marginBottom={{ base: '12px', md: '0' }}>\n          <Link to=\"/\">\n            <Flex align=\"center\">\n              <Avatar\n                src={strawHatPic}\n                bg={avatarBgColor}\n                name=\"Shubham Tarade\"\n              />\n              <Heading size=\"md\">Shubham Tarade</Heading>\n            </Flex>\n          </Link>\n        </Button>\n      </Flex>\n      <Flex align=\"center\">\n        {navItems.map((navItem) => (\n          <NavItem\n            key={navItem.page}\n            itemName={navItem.page}\n            routeUrl={navItem.routeUrl}\n          ></NavItem>\n        ))}\n        <Button\n          onClick={toggleColorMode}\n          marginLeft={{ base: '6px', md: '12px' }}\n        >\n          <Icon as={colorMode === 'light' ? FaMoon : FaSun} />\n        </Button>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/shubham_profile.0a76bded.jpg\";","import React, { useEffect, useState } from \"react\";\nimport {\n  Grid,\n  GridItem,\n  Image,\n  Tag,\n  Text,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport Typist from \"react-typist\";\n\nimport profilePic from \"../../assets/shubham_profile.jpg\";\n\nconst ProfileCard = () => {\n  const [count, setCount] = useState(0);\n  const typedTextBgColor = useColorModeValue(\"#1da1f2\", \"#edf2f7\");\n  const typedTextColor = useColorModeValue(\"#edf2f7\", \"#1da1f2\");\n\n  useEffect(() => {\n    setCount(1);\n  }, [count]);\n\n  return (\n    <Grid\n      templateColumns={{ base: \"1fr\", md: \"2fr 2fr\", lg: \"1fr 3fr\" }}\n      mt={10}\n      p={4}\n      gridColumnGap={10}\n      textAlign={{ base: \"center\", md: \"inherit\" }}\n    >\n      <GridItem alignSelf=\"center\">\n        <Image src={profilePic} borderRadius=\"full\" alt=\"Shubham Tarade\" />\n      </GridItem>\n      <GridItem paddingTop=\"30px\" alignSelf=\"center\">\n        <Text fontSize=\"2xl\" fontWeight=\"bold\">\n          Hello !\n        </Text>\n        {count ? (\n          <Typist\n            cursor={{ show: false, hideWhenDone: true }}\n            onTypingDone={() => setCount(0)}\n          >\n            <span\n              style={{ fontSize: \"24px\", fontWeight: \"bold\", color: \"#1da1f2\" }}\n            >\n              I am{\" \"}\n              <span\n                style={{\n                  backgroundColor: `${typedTextBgColor}`,\n                  padding: \"4px\",\n                  borderRadius: \"5px\",\n                  color: `${typedTextColor}`,\n                }}\n              >\n                Shubham\n                <Typist.Backspace count={7} delay={1250} />\n                Frontend Developer\n                <Typist.Backspace count={18} delay={1250} />\n                Cricket Fan\n                <Typist.Backspace count={11} delay={1250} />\n                Anime Lover\n              </span>\n            </span>\n          </Typist>\n        ) : (\n          \"\"\n        )}\n        <br />\n        <Text fontSize=\"lg\">\n          Passionate and creative Frontend developer, Blogger from{\" \"}\n          <Tag fontSize=\"lg\">Pune, India</Tag>.\n        </Text>\n        <br />\n        <Text fontSize=\"lg\">\n          Currently working as a frontend developer at{\" \"}\n          <Tag\n            as=\"a\"\n            fontSize=\"lg\"\n            href=\"https://www.ycombinator.com/companies/redbrick-ai\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            RedBrick AI (YC'W22)\n          </Tag>\n          handling UI development, .\n        </Text>\n        <Text fontSize=\"lg\">\n          Co-founder at{\" \"}\n          <Tag\n            as=\"a\"\n            fontSize=\"lg\"\n            href=\"https://fullyunderstood.com/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Fully Understood\n          </Tag>\n          .\n        </Text>\n        <br />\n        <Text fontSize=\"lg\">\n          Apart from 9-5 job, I like to work on side projects and try to\n          constantly learn something new to improve my skillset. At present, I\n          am using React for my web projects and really enjoying it.\n        </Text>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default ProfileCard;\n","import React from 'react';\nimport { Tag } from '@chakra-ui/react';\n\nconst SkillTag = ({ tag, colorScheme }) => {\n  return (\n    <Tag\n      size=\"lg\"\n      borderRadius=\"base\"\n      height=\"40px\"\n      cursor=\"pointer\"\n      justifyContent=\"center\"\n      colorScheme={colorScheme}\n      variant=\"outline\"\n      _hover={{\n        transform: 'translateX(2px)',\n        transition: 'all .2s',\n      }}\n    >\n      {tag}\n    </Tag>\n  );\n};\n\nexport default SkillTag;\n","import React from 'react';\nimport { Box, Grid, Text } from '@chakra-ui/react';\nimport SkillTag from '../skill-tag/skill-tag.component';\n\nconst tags = [\n  { name: 'ReactJS', colorScheme: 'blue' },\n  { name: 'JavaScript', colorScheme: 'teal' },\n  { name: 'TypeScript', colorScheme: 'cyan' },\n  { name: 'HTML5', colorScheme: 'purple' },\n  { name: 'CSS3', colorScheme: 'red' },\n  { name: 'C# .NET', colorScheme: 'messenger' },\n  { name: 'CI/CD', colorScheme: 'linkedin' },\n  { name: 'Cypress', colorScheme: 'blue' },\n  { name: 'Git', colorScheme: 'gray' },\n  { name: 'NUnit', colorScheme: 'telegram' },\n];\n\nconst Skills = () => {\n  return (\n    <Box p={4}>\n      <Text fontSize=\"lg\" fontWeight=\"bold\">\n        Skills:\n      </Text>\n      <br />\n\n      <Grid\n        templateColumns={{\n          base: 'repeat(2, 1fr)',\n          sm: 'repeat(3, 1fr)',\n          md: 'repeat(4, 1fr)',\n          lg: 'repeat(6, 1fr)',\n        }}\n        gap={3}\n      >\n        {tags.map((tag) => (\n          <SkillTag\n            key={tag.name}\n            tag={tag.name}\n            colorScheme={tag.colorScheme}\n          />\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Skills;\n","import React from 'react';\nimport { Icon } from '@chakra-ui/react';\n\nconst SociaLink = ({ color, socialUrl, svgIcon }) => {\n  return (\n    <a href={socialUrl} target=\"_blank\" rel=\"noreferrer\">\n      <Icon\n        as={svgIcon}\n        w=\"50px\"\n        h=\"50px\"\n        _hover={{\n          transform: 'translateY(-2px)',\n          transition: 'all .2s',\n        }}\n        borderRadius=\"14px\"\n        color={`${color}.500`}\n      />\n    </a>\n  );\n};\n\nexport default SociaLink;\n","import React from 'react';\nimport { Box, Text, Flex } from '@chakra-ui/react';\n\nimport SociaLink from '../social-link/social-link.component';\n\nimport {\n  FaLinkedin,\n  FaMedium,\n  FaTwitterSquare,\n  FaGithubSquare,\n} from 'react-icons/fa';\n\nconst socialsInfo = [\n  {\n    name: 'github',\n    socialUrl: 'https://github.com/coder-shanks',\n    svgIcon: FaGithubSquare,\n    color: 'black',\n  },\n  {\n    name: 'linkedin',\n    socialUrl: 'https://www.linkedin.com/in/shubham-tarade/',\n    svgIcon: FaLinkedin,\n    color: 'linkedin',\n  },\n  {\n    name: 'twitter',\n    socialUrl: 'https://twitter.com/tarade_shubham',\n    svgIcon: FaTwitterSquare,\n    color: 'twitter',\n  },\n  {\n    name: 'medium',\n    socialUrl: 'https://medium.com/@sgstarade',\n    svgIcon: FaMedium,\n    color: 'green',\n  },\n];\n\nconst Socials = () => {\n  return (\n    <Box p={4}>\n      <Text fontSize=\"lg\" fontWeight=\"bold\">\n        You can find me on:\n      </Text>\n\n      <br />\n      <Flex maxW=\"240px\" justify=\"space-between\">\n        {socialsInfo.map((socialInfo) => (\n          <SociaLink\n            key={socialInfo.name}\n            color={socialInfo.color}\n            socialUrl={socialInfo.socialUrl}\n            svgIcon={socialInfo.svgIcon}\n          />\n        ))}\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Socials;\n","import React from 'react';\nimport { Box } from '@chakra-ui/layout';\n\nimport ProfileCard from '../../components/profile-card/profile-card.component';\nimport Skills from '../../components/skills/skills.component';\nimport Socials from '../../components/socials/socials.component';\n\nconst HomePage = () => {\n  return (\n    <Box>\n      <ProfileCard />\n      <Socials />\n      <Skills />\n    </Box>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport axios from 'axios';\nimport { Image } from '@chakra-ui/image';\nimport { Box, Grid } from '@chakra-ui/layout';\nimport { Spinner } from '@chakra-ui/spinner';\n\nclass BlogsPage extends React.Component {\n  state = {\n    blogs: [],\n  };\n\n  componentDidMount() {\n    try {\n      axios\n        .get(\n          'https://fullyunderstood.com/wp-json/wp/v2/posts?author=2&per_page=100&_embed'\n        )\n        .then((result) => {\n          if (result.status === 200 && result.data) {\n            this.setState({ blogs: result.data });\n          }\n        });\n    } catch (error) {}\n  }\n\n  render() {\n    const { blogs } = this.state;\n\n    return (\n      <Grid\n        mt={10}\n        p={4}\n        templateColumns={{\n          base: '1fr',\n          sm: 'repeat(2, 1fr)',\n          md: 'repeat(3, 1fr)',\n        }}\n        gap={3}\n      >\n        {blogs.length ? (\n          blogs.map(({ id, date, title: { rendered }, link, _embedded }) => (\n            <Box\n              key={id}\n              as=\"a\"\n              m={2}\n              href={link}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              position=\"relative\"\n              _hover={{\n                transform: 'translateY(-2px)',\n                transition: 'all .2s',\n              }}\n            >\n              <Image\n                src={_embedded['wp:featuredmedia'][0].link}\n                alt={rendered}\n                borderRadius=\"base\"\n              />\n              {/* <Box>\n                  <Text>{rendered}</Text>\n                  <Text>{new Date(date).toLocaleDateString('in')}</Text>\n                </Box> */}\n            </Box>\n          ))\n        ) : (\n          <Spinner />\n        )}\n      </Grid>\n    );\n  }\n}\n\nexport default BlogsPage;\n","import React from 'react';\nimport { GridItem, Heading, Text } from '@chakra-ui/layout';\n\nconst ProjectInfo = ({ name, description }) => {\n  return (\n    <GridItem alignSelf=\"start\">\n      <Heading\n        fontSize={{ base: '14px', md: '16px', lg: '18px' }}\n        paddingBottom=\"2px\"\n      >\n        {name}\n      </Heading>\n      <Text fontSize={{ base: '10px', md: '12px', lg: '13px' }}>\n        {description}\n      </Text>\n    </GridItem>\n  );\n};\n\nexport default ProjectInfo;\n","import React from 'react';\nimport { GoLink, GoMarkGithub, GoStar, GoRepoForked } from 'react-icons/go';\nimport { Grid, GridItem, Badge } from '@chakra-ui/layout';\nimport Icon from '@chakra-ui/icon';\n\nconst ProjectMeta = ({ projectMeta }) => {\n  const {\n    language,\n    stargazers_count,\n    forks_count,\n    html_url,\n    homepage,\n  } = projectMeta;\n\n  return (\n    <GridItem alignSelf=\"end\">\n      <Grid templateColumns=\"2.4fr 1.6fr\">\n        <GridItem>\n          {language != null ? (\n            <Badge marginRight=\"4px\">{language}</Badge>\n          ) : null}\n          {stargazers_count >= 0 ? (\n            <span style={{ marginRight: '4px' }}>\n              <Icon as={GoStar} />\n              {stargazers_count}\n            </span>\n          ) : null}\n          {forks_count >= 0 ? (\n            <span style={{ marginRight: '4px' }}>\n              <Icon as={GoRepoForked} />\n              {forks_count}\n            </span>\n          ) : null}\n        </GridItem>\n        <GridItem justifySelf=\"end\">\n          <a href={html_url} target=\"_blank\" rel=\"noreferrer\">\n            <Icon as={GoMarkGithub} />\n          </a>\n          {homepage ? (\n            <a\n              href={homepage}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              style={{ marginLeft: '6px' }}\n            >\n              <Icon as={GoLink} />\n            </a>\n          ) : null}\n        </GridItem>\n      </Grid>\n    </GridItem>\n  );\n};\n\nexport default ProjectMeta;\n","import React from 'react';\nimport { Grid } from '@chakra-ui/layout';\n\nimport ProjectInfo from '../project-info/project-info.component';\nimport ProjectMeta from '../project-meta/project-meta.component';\n\nconst ProjectContainer = ({ project }) => {\n  const { name, description, ...otherProps } = project;\n  return (\n    <Grid\n      padding=\"8px\"\n      cursor=\"pointer\"\n      color=\"white\"\n      borderRadius=\"base\"\n      bgGradient=\"linear-gradient(135deg, rgba(38,159,233,1) 30%, rgba(11,86,170,1) 87%)\"\n      _hover={{\n        transform: 'translateY(-2px)',\n        transition: 'all .2s',\n      }}\n      height={{ base: '135px', md: '123px' }}\n    >\n      <ProjectInfo name={name} description={description} />\n      <ProjectMeta projectMeta={otherProps} />\n    </Grid>\n  );\n};\n\nexport default ProjectContainer;\n","import React from 'react';\nimport axios from 'axios';\nimport { Grid } from '@chakra-ui/layout';\nimport { Spinner } from '@chakra-ui/spinner';\nimport ProjectContainer from '../../components/project-container/project-container.component';\n\nclass ProjectsPage extends React.Component {\n  state = {\n    projects: [],\n  };\n\n  componentDidMount() {\n    try {\n      const repositoryRequestUrl =\n        'https://api.github.com/users/coder-shanks/repos?sort=updated&direction=desc';\n      const repositoryRequestConfig = {\n        headers: {\n          Accept: 'application/vnd.github.v3+json',\n        },\n      };\n\n      axios\n        .get(repositoryRequestUrl, repositoryRequestConfig)\n        .then((repositoryResult) => {\n          if (repositoryResult.status === 200 && repositoryResult.data) {\n            this.setState({ projects: repositoryResult.data });\n          }\n        });\n    } catch (error) {}\n  }\n\n  render() {\n    const { projects } = this.state;\n\n    return (\n      <Grid\n        mt={10}\n        p={4}\n        templateColumns={{\n          base: '1fr',\n          md: 'repeat(2, 1fr)',\n          lg: 'repeat(3, 1fr)',\n        }}\n        gap={3}\n      >\n        {projects.length ? (\n          projects.map((project) => (\n            <ProjectContainer key={project.id} project={project} />\n          ))\n        ) : (\n          <Spinner />\n        )}\n      </Grid>\n    );\n  }\n}\n\nexport default ProjectsPage;\n","import React from 'react';\nimport { Container } from '@chakra-ui/react';\nimport { Switch, Route } from 'react-router';\n\nimport './App.css';\nimport Header from './components/header/header.component';\nimport HomePage from './pages/homepage/homepage.component';\nimport BlogsPage from './pages/blogs/blogs.component';\nimport ProjectsPage from './pages/projects/projects.component';\n\nfunction App() {\n  return (\n    <Container maxW=\"container.xl\" pt={4}>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/blogs\" component={BlogsPage} />\n        <Route path=\"/projects\" component={ProjectsPage} />\n      </Switch>\n    </Container>\n  );\n}\n\nexport default App;\n","import { extendTheme } from '@chakra-ui/react';\n\n// Add color mode config\nconst config = {\n  initialColorMode: 'light',\n  useSystemColorMode: false,\n};\n\n// Extend the theme\nconst theme = extendTheme({ config });\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport theme from './theme';\n\nimport { ChakraProvider, ColorModeScript } from '@chakra-ui/react';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <ChakraProvider>\n      <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n      <App />\n    </ChakraProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}