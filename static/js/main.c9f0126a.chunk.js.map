{"version":3,"sources":["assets/straw_hat.png","components/nav-item/nav-item.component.jsx","components/header/header.component.jsx","assets/shubham_profile.jpg","components/profile-card/profile-card.component.jsx","components/skill-tag/skill-tag.component.jsx","components/skills/skills.component.jsx","components/social-link/social-link.component.jsx","components/socials/socials.component.jsx","pages/homepage/homepage.component.jsx","pages/blogs/blogs.component.jsx","components/project-info/project-info.component.jsx","components/project-meta/project-meta.component.jsx","components/project-container/project-container.component.jsx","pages/projects/projects.component.jsx","App.js","theme.js","index.js"],"names":["withRouter","itemName","routeUrl","location","to","marginLeft","colorScheme","variant","pathname","navItems","page","Header","useColorMode","colorMode","toggleColorMode","justifyContent","base","md","flexWrap","align","border","borderColor","paddingRight","borderRadius","marginBottom","src","strawHatPic","bg","name","size","color","map","navItem","onClick","as","FaMoon","FaSun","ProfileCard","templateColumns","lg","mt","p","gridColumnGap","textAlign","alignSelf","profilePic","alt","paddingTop","fontSize","fontWeight","SkillTag","tag","height","cursor","_hover","transform","transition","tags","Skills","sm","gap","SociaLink","socialUrl","svgIcon","href","target","rel","w","h","socialsInfo","FaGithubSquare","FaLinkedin","FaTwitterSquare","FaMedium","Socials","maxW","justify","socialInfo","HomePage","BlogsPage","state","blogs","axios","get","then","result","status","data","setState","error","this","length","id","rendered","date","title","link","_embedded","m","position","React","Component","ProjectInfo","description","paddingBottom","ProjectMeta","projectMeta","language","stargazers_count","forks_count","html_url","homepage","marginRight","style","GoStar","GoRepoForked","justifySelf","GoMarkGithub","GoLink","ProjectContainer","project","otherProps","padding","bgGradient","ProjectsPage","projects","headers","Accept","repositoryResult","App","pt","exact","path","component","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9f0126a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/straw_hat.11d9b5e3.png\";","import React from 'react';\r\nimport { Button } from '@chakra-ui/button';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst NavItem = ({ itemName, routeUrl, location }) => {\r\n  return (\r\n    <Link to={routeUrl}>\r\n      <Button\r\n        marginLeft={3}\r\n        colorScheme=\"twitter\"\r\n        variant={location.pathname === routeUrl ? 'outline' : 'solid'}\r\n      >\r\n        {itemName}\r\n      </Button>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default withRouter(NavItem);\r\n","import React from 'react';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Flex,\r\n  Heading,\r\n  Icon,\r\n  useColorMode,\r\n} from '@chakra-ui/react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaSun, FaMoon } from 'react-icons/fa';\r\n\r\nimport strawHatPic from '../../assets/straw_hat.png';\r\nimport NavItem from '../nav-item/nav-item.component';\r\n\r\nconst navItems = [\r\n  { page: 'Blogs', routeUrl: '/blogs' },\r\n  { page: 'Projects', routeUrl: '/projects' },\r\n  { page: 'Resume', routeUrl: '/resume' },\r\n];\r\n\r\nconst Header = () => {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  return (\r\n    <Flex\r\n      justifyContent={{ base: 'center', md: 'space-between' }}\r\n      flexWrap=\"wrap\"\r\n    >\r\n      <Flex>\r\n        <Link to=\"/\">\r\n          <Flex\r\n            align=\"center\"\r\n            border=\"1px solid\"\r\n            borderColor=\"twitter.500\"\r\n            paddingRight=\"8px\"\r\n            borderRadius=\"10px\"\r\n            marginBottom={{ base: '12px', md: '0' }}\r\n          >\r\n            <Avatar src={strawHatPic} bg=\"white\" name=\"Shubham Tarade\" />\r\n            <Heading size=\"md\" color={'twitter.500'}>\r\n              Shubham Tarade\r\n            </Heading>\r\n          </Flex>\r\n        </Link>\r\n      </Flex>\r\n      <Flex align=\"center\">\r\n        {navItems.map((navItem) => (\r\n          <NavItem\r\n            key={navItem.page}\r\n            itemName={navItem.page}\r\n            routeUrl={navItem.routeUrl}\r\n          ></NavItem>\r\n        ))}\r\n        <Button onClick={toggleColorMode} marginLeft={3}>\r\n          <Icon as={colorMode === 'light' ? FaMoon : FaSun} />\r\n        </Button>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/shubham_profile.0a76bded.jpg\";","import React from 'react';\r\nimport { Grid, GridItem, Image, Text } from '@chakra-ui/react';\r\n\r\nimport profilePic from '../../assets/shubham_profile.jpg';\r\n\r\nconst ProfileCard = () => {\r\n  return (\r\n    <Grid\r\n      templateColumns={{ base: '1fr', md: '2fr 2fr', lg: '1fr 3fr' }}\r\n      mt={10}\r\n      p={4}\r\n      gridColumnGap={10}\r\n      textAlign={{ base: 'center', md: 'inherit' }}\r\n    >\r\n      <GridItem alignSelf=\"center\">\r\n        <Image src={profilePic} borderRadius=\"full\" alt=\"Shubham Tarade\" />\r\n      </GridItem>\r\n      <GridItem paddingTop=\"30px\" alignSelf=\"center\">\r\n        <Text fontSize=\"2xl\" fontWeight=\"bold\">\r\n          Hello !\r\n        </Text>\r\n        <Text fontSize=\"2xl\" fontWeight=\"bold\" color=\"twitter.500\">\r\n          I am Shubham Tarade\r\n        </Text>\r\n        <br />\r\n        <Text fontSize=\"lg\">\r\n          Passionate and creative front-end software engineer from India\r\n        </Text>\r\n        <br />\r\n        <Text fontSize=\"lg\">\r\n          I'm currently a software engineer at Siemens Advanta.\r\n        </Text>\r\n        <br />\r\n        <Text fontSize=\"lg\">\r\n          I consider myself a curious and inquisitive person, so on my spare\r\n          time I like to work on side projects and try to constantly learn\r\n          something new to improve my skillset.\r\n        </Text>\r\n      </GridItem>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n","import React from 'react';\r\nimport { Tag } from '@chakra-ui/react';\r\n\r\nconst SkillTag = ({ tag, colorScheme }) => {\r\n  return (\r\n    <Tag\r\n      size=\"lg\"\r\n      borderRadius=\"base\"\r\n      height=\"40px\"\r\n      cursor=\"pointer\"\r\n      justifyContent=\"center\"\r\n      colorScheme={colorScheme}\r\n      variant=\"outline\"\r\n      _hover={{\r\n        transform: 'translateX(2px)',\r\n        transition: 'all .2s',\r\n      }}\r\n    >\r\n      {tag}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nexport default SkillTag;\r\n","import React from 'react';\r\nimport { Box, Grid, Text } from '@chakra-ui/react';\r\nimport SkillTag from '../skill-tag/skill-tag.component';\r\n\r\nconst tags = [\r\n  { name: 'ReactJS', colorScheme: 'blue' },\r\n  { name: 'JavaScript', colorScheme: 'teal' },\r\n  { name: 'TypeScript', colorScheme: 'cyan' },\r\n  { name: 'HTML5', colorScheme: 'purple' },\r\n  { name: 'CSS3', colorScheme: 'red' },\r\n  { name: 'C# .NET', colorScheme: 'messenger' },\r\n  { name: 'CI/CD', colorScheme: 'linkedin' },\r\n  { name: 'Cypress', colorScheme: 'blue' },\r\n  { name: 'Git', colorScheme: 'gray' },\r\n  { name: 'NUnit', colorScheme: 'telegram' },\r\n];\r\n\r\nconst Skills = () => {\r\n  return (\r\n    <Box p={4}>\r\n      <Text fontSize=\"lg\" fontWeight=\"bold\">\r\n        Skills:\r\n      </Text>\r\n      <br />\r\n\r\n      <Grid\r\n        templateColumns={{\r\n          base: 'repeat(2, 1fr)',\r\n          sm: 'repeat(3, 1fr)',\r\n          md: 'repeat(4, 1fr)',\r\n          lg: 'repeat(6, 1fr)',\r\n        }}\r\n        gap={3}\r\n      >\r\n        {tags.map((tag) => (\r\n          <SkillTag\r\n            key={tag.name}\r\n            tag={tag.name}\r\n            colorScheme={tag.colorScheme}\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import React from 'react';\r\nimport { Icon } from '@chakra-ui/react';\r\n\r\nconst SociaLink = ({ color, socialUrl, svgIcon }) => {\r\n  return (\r\n    <a href={socialUrl} target=\"_blank\" rel=\"noreferrer\">\r\n      <Icon\r\n        as={svgIcon}\r\n        w=\"50px\"\r\n        h=\"50px\"\r\n        _hover={{\r\n          transform: 'translateY(-2px)',\r\n          transition: 'all .2s',\r\n        }}\r\n        borderRadius=\"14px\"\r\n        color={`${color}.500`}\r\n      />\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default SociaLink;\r\n","import React from 'react';\r\nimport { Box, Text, Flex } from '@chakra-ui/react';\r\n\r\nimport SociaLink from '../social-link/social-link.component';\r\n\r\nimport {\r\n  FaLinkedin,\r\n  FaMedium,\r\n  FaTwitterSquare,\r\n  FaGithubSquare,\r\n} from 'react-icons/fa';\r\n\r\nconst socialsInfo = [\r\n  {\r\n    name: 'github',\r\n    socialUrl: 'https://github.com/coder-shanks',\r\n    svgIcon: FaGithubSquare,\r\n    color: 'black',\r\n  },\r\n  {\r\n    name: 'linkedin',\r\n    socialUrl: 'https://www.linkedin.com/in/shubham-tarade/',\r\n    svgIcon: FaLinkedin,\r\n    color: 'linkedin',\r\n  },\r\n  {\r\n    name: 'twitter',\r\n    socialUrl: 'https://twitter.com/tarade_shubham',\r\n    svgIcon: FaTwitterSquare,\r\n    color: 'twitter',\r\n  },\r\n  {\r\n    name: 'medium',\r\n    socialUrl: 'https://medium.com/@sgstarade',\r\n    svgIcon: FaMedium,\r\n    color: 'green',\r\n  },\r\n];\r\n\r\nconst Socials = () => {\r\n  return (\r\n    <Box p={4}>\r\n      <Text fontSize=\"lg\" fontWeight=\"bold\">\r\n        You can find me on:\r\n      </Text>\r\n\r\n      <br />\r\n      <Flex maxW=\"240px\" justify=\"space-between\">\r\n        {socialsInfo.map((socialInfo) => (\r\n          <SociaLink\r\n            key={socialInfo.name}\r\n            color={socialInfo.color}\r\n            socialUrl={socialInfo.socialUrl}\r\n            svgIcon={socialInfo.svgIcon}\r\n          />\r\n        ))}\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Socials;\r\n","import React from 'react';\r\nimport { Box } from '@chakra-ui/layout';\r\n\r\nimport ProfileCard from '../../components/profile-card/profile-card.component';\r\nimport Skills from '../../components/skills/skills.component';\r\nimport Socials from '../../components/socials/socials.component';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <Box>\r\n      <ProfileCard />\r\n      <Socials />\r\n      <Skills />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Image } from '@chakra-ui/image';\r\nimport { Box, Grid } from '@chakra-ui/layout';\r\nimport { Spinner } from '@chakra-ui/spinner';\r\n\r\nclass BlogsPage extends React.Component {\r\n  state = {\r\n    blogs: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      axios\r\n        .get(\r\n          'https://fullyunderstood.com/wp-json/wp/v2/posts?author=2&per_page=100&_embed'\r\n        )\r\n        .then((result) => {\r\n          if (result.status === 200 && result.data) {\r\n            this.setState({ blogs: result.data });\r\n          }\r\n        });\r\n    } catch (error) {}\r\n  }\r\n\r\n  render() {\r\n    const { blogs } = this.state;\r\n\r\n    return (\r\n      <Grid\r\n        mt={10}\r\n        p={4}\r\n        templateColumns={{\r\n          base: '1fr',\r\n          sm: 'repeat(2, 1fr)',\r\n          md: 'repeat(3, 1fr)',\r\n        }}\r\n        gap={3}\r\n      >\r\n        {blogs.length ? (\r\n          blogs.map(({ id, date, title: { rendered }, link, _embedded }) => (\r\n            <Box\r\n              key={id}\r\n              as=\"a\"\r\n              m={2}\r\n              href={link}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              position=\"relative\"\r\n              _hover={{\r\n                transform: 'translateY(-2px)',\r\n                transition: 'all .2s',\r\n              }}\r\n            >\r\n              <Image\r\n                src={_embedded['wp:featuredmedia'][0].link}\r\n                alt={rendered}\r\n                borderRadius=\"base\"\r\n              />\r\n              {/* <Box>\r\n                  <Text>{rendered}</Text>\r\n                  <Text>{new Date(date).toLocaleDateString('in')}</Text>\r\n                </Box> */}\r\n            </Box>\r\n          ))\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlogsPage;\r\n","import React from 'react';\r\nimport { GridItem, Heading, Text } from '@chakra-ui/layout';\r\n\r\nconst ProjectInfo = ({ name, description }) => {\r\n  return (\r\n    <GridItem alignSelf=\"start\">\r\n      <Heading\r\n        fontSize={{ base: '14px', md: '16px', lg: '18px' }}\r\n        paddingBottom=\"2px\"\r\n      >\r\n        {name}\r\n      </Heading>\r\n      <Text fontSize={{ base: '10px', md: '12px', lg: '13px' }}>\r\n        {description}\r\n      </Text>\r\n    </GridItem>\r\n  );\r\n};\r\n\r\nexport default ProjectInfo;\r\n","import React from 'react';\r\nimport { GoLink, GoMarkGithub, GoStar, GoRepoForked } from 'react-icons/go';\r\nimport { Grid, GridItem, Badge } from '@chakra-ui/layout';\r\nimport Icon from '@chakra-ui/icon';\r\n\r\nconst ProjectMeta = ({ projectMeta }) => {\r\n  const {\r\n    language,\r\n    stargazers_count,\r\n    forks_count,\r\n    html_url,\r\n    homepage,\r\n  } = projectMeta;\r\n\r\n  return (\r\n    <GridItem alignSelf=\"end\">\r\n      <Grid templateColumns=\"2.4fr 1.6fr\">\r\n        <GridItem>\r\n          {language != null ? (\r\n            <Badge marginRight=\"4px\">{language}</Badge>\r\n          ) : null}\r\n          {stargazers_count >= 0 ? (\r\n            <span style={{ marginRight: '4px' }}>\r\n              <Icon as={GoStar} />\r\n              {stargazers_count}\r\n            </span>\r\n          ) : null}\r\n          {forks_count >= 0 ? (\r\n            <span style={{ marginRight: '4px' }}>\r\n              <Icon as={GoRepoForked} />\r\n              {forks_count}\r\n            </span>\r\n          ) : null}\r\n        </GridItem>\r\n        <GridItem justifySelf=\"end\">\r\n          <a href={html_url} target=\"_blank\" rel=\"noreferrer\">\r\n            <Icon as={GoMarkGithub} />\r\n          </a>\r\n          {homepage ? (\r\n            <a\r\n              href={homepage}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              style={{ marginLeft: '6px' }}\r\n            >\r\n              <Icon as={GoLink} />\r\n            </a>\r\n          ) : null}\r\n        </GridItem>\r\n      </Grid>\r\n    </GridItem>\r\n  );\r\n};\r\n\r\nexport default ProjectMeta;\r\n","import React from 'react';\r\nimport { Grid } from '@chakra-ui/layout';\r\n\r\nimport ProjectInfo from '../project-info/project-info.component';\r\nimport ProjectMeta from '../project-meta/project-meta.component';\r\n\r\nconst ProjectContainer = ({ project }) => {\r\n  const { name, description, ...otherProps } = project;\r\n  return (\r\n    <Grid\r\n      padding=\"8px\"\r\n      cursor=\"pointer\"\r\n      color=\"white\"\r\n      borderRadius=\"base\"\r\n      bgGradient=\"linear-gradient(135deg, rgba(38,159,233,1) 30%, rgba(11,86,170,1) 87%)\"\r\n      _hover={{\r\n        transform: 'translateY(-2px)',\r\n        transition: 'all .2s',\r\n      }}\r\n      height={{ base: '135px', md: '123px' }}\r\n    >\r\n      <ProjectInfo name={name} description={description} />\r\n      <ProjectMeta projectMeta={otherProps} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProjectContainer;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Grid } from '@chakra-ui/layout';\r\nimport { Spinner } from '@chakra-ui/spinner';\r\nimport ProjectContainer from '../../components/project-container/project-container.component';\r\n\r\nclass ProjectsPage extends React.Component {\r\n  state = {\r\n    projects: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      const repositoryRequestUrl =\r\n        'https://api.github.com/users/coder-shanks/repos?sort=updated&direction=desc';\r\n      const repositoryRequestConfig = {\r\n        headers: {\r\n          Accept: 'application/vnd.github.v3+json',\r\n        },\r\n      };\r\n\r\n      axios\r\n        .get(repositoryRequestUrl, repositoryRequestConfig)\r\n        .then((repositoryResult) => {\r\n          if (repositoryResult.status === 200 && repositoryResult.data) {\r\n            this.setState({ projects: repositoryResult.data });\r\n          }\r\n        });\r\n    } catch (error) {}\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.state;\r\n\r\n    return (\r\n      <Grid\r\n        mt={10}\r\n        p={4}\r\n        templateColumns={{\r\n          base: '1fr',\r\n          md: 'repeat(2, 1fr)',\r\n          lg: 'repeat(3, 1fr)',\r\n        }}\r\n        gap={3}\r\n      >\r\n        {projects.length ? (\r\n          projects.map((project) => (\r\n            <ProjectContainer key={project.id} project={project} />\r\n          ))\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectsPage;\r\n","import React from 'react';\nimport { Container } from '@chakra-ui/react';\nimport { Switch, Route } from 'react-router';\n\nimport './App.css';\nimport Header from './components/header/header.component';\nimport HomePage from './pages/homepage/homepage.component';\nimport BlogsPage from './pages/blogs/blogs.component';\nimport ProjectsPage from './pages/projects/projects.component';\n\nfunction App() {\n  return (\n    <Container maxW=\"container.xl\" pt={5}>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/blogs\" component={BlogsPage} />\n        <Route path=\"/projects\" component={ProjectsPage} />\n\n        <Route path=\"/resume\">\n          <h1>Resume page</h1>\n        </Route>\n      </Switch>\n    </Container>\n  );\n}\n\nexport default App;\n","import { extendTheme } from '@chakra-ui/react';\r\n\r\n// Add color mode config\r\nconst config = {\r\n  initialColorMode: 'light',\r\n  useSystemColorMode: false,\r\n};\r\n\r\n// Extend the theme\r\nconst theme = extendTheme({ config });\r\n\r\nexport default theme;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport theme from './theme';\n\nimport { ChakraProvider, ColorModeScript } from '@chakra-ui/react';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <ChakraProvider>\n      <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n      <App />\n    </ChakraProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}